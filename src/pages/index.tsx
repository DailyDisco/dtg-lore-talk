import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import Header from "./components/common/Header";
import Footer from "./components/common/Footer";

import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import PrimaryLayout from "./components/layouts/PrimaryLayout";
import { NextPageWithLayout } from "./page";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <section className="">
          <h1 className="text-center text-2xl uppercase">Test</h1>
          <p>
            {" "}
            Velit veniam sunt cillum veniam laborum aute enim deserunt. Aliqua
            commodo laborum sunt incididunt culpa Lorem labore. Consequat
            excepteur in dolor pariatur est nulla eiusmod ad enim. Enim irure
            adipisicing ex minim proident exercitation occaecat ad id minim ea
            amet excepteur ipsum. Eiusmod nostrud eiusmod amet enim et elit
            cillum sit pariatur. Dolore reprehenderit dolor cillum sunt.
          </p>
        </section>
      </main>
      {/* <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p> */}
    </>
  );
};

export default Home;

Home.getLayout = (page) => {
  return <PrimaryLayout>{page}</PrimaryLayout>;
};

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
